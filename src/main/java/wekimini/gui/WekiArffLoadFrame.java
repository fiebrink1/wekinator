/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package wekimini.gui;

import java.util.ArrayList;
import java.util.List;
import weka.core.Instances;
import wekimini.Wekinator;
import wekimini.util.Util;

/**
 *
 * @author rebecca
 */
public class WekiArffLoadFrame extends javax.swing.JFrame {

    private final Wekinator w;

    private final List<ArffConfigDropdownRow> rows = new ArrayList<>();
    
    private final ArffConfiguredNotificationReceiver arffConfiguredReceiver;
    
    private final List<List<Integer>> projectIndicesPerColumn;
    
    /**
     * Creates new form OSCInputStatusFrame
     */
    public WekiArffLoadFrame() {
        initComponents();
        this.w = null;
        projectIndicesPerColumn = null;
        arffConfiguredReceiver = null;
        
    }

    public WekiArffLoadFrame(final Wekinator w, 
            Instances structure,
            List<List<String>> projectNamesPerColumn,
            List<List<Integer>> projectIndicesPerColumn,
            int[] selectedIndicesPerColumn, 
            ArffConfiguredNotificationReceiver recv) 
        {
        initComponents();
       // arffMappingReceiver = recv;
        this.w = w;
        this.arffConfiguredReceiver = recv;
        this.projectIndicesPerColumn = projectIndicesPerColumn;
        //int numInputs = currentInputs.length;
        //int numOutputs = currentOutputs.length;
        
        panelInputsParent.removeAll();

        
        LabelLabelRow labels = new LabelLabelRow("Column in file:", "Input/Output in project:");
        panelInputsParent.add(labels);
        
       
        //TODO: Note in interface:
        //* requires mod
        // ^ requires mod
        // Some are absent because not compaitble; hsould change outputs first
        //Put info about type, # classes in this interface. 
       
        for (int i = 0; i < structure.numAttributes(); i++) {
            ArffConfigDropdownRow r = new ArffConfigDropdownRow(structure.attribute(i), projectNamesPerColumn.get(i).toArray(new String[0]));
            r.setSelectedIndex(selectedIndicesPerColumn[i]);
            rows.add(r);
            panelInputsParent.add(r);
        }
        panelInputsParent.repaint(); 
    }

   /* private int[] tryToSelectIndices(String[] allOptions, String[] loadedColumns) {
        int[] selectedIndices = new int[loadedColumns.length];
        for (int i = 0; i < selectedIndices.length; i++) {
            boolean found = false;
            for (int j = 1; j < allOptions.length; j++) {
                if (loadedColumns[i].equalsIgnoreCase(allOptions[j])) {
                    selectedIndices[i] = j;
                    break;
                }
            }
            if (!found) {
                selectedIndices[i] = 0;
            }
        }
        return selectedIndices;
    } */
    
    public interface ArffMappingReceiver {
        void setNamesAndDataPref(String[] names, boolean overwriteData);
        void cancel();
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel4 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        panelInputsParent = new javax.swing.JPanel();
        nameDropdownRow1 = new wekimini.gui.NameDropdownRow();
        nameDropdownRow2 = new wekimini.gui.NameDropdownRow();
        nameDropdownRow3 = new wekimini.gui.NameDropdownRow();
        nameDropdownRow4 = new wekimini.gui.NameDropdownRow();
        buttonApply = new javax.swing.JButton();
        buttonCancel = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        comboOverwrite = new javax.swing.JComboBox();
        comboIgnore = new javax.swing.JCheckBox();

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Load examples from ARFF");

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        jLabel4.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        jLabel4.setText("Inputs and outputs:");

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        panelInputsParent.setBackground(new java.awt.Color(255, 255, 255));
        panelInputsParent.setLayout(new javax.swing.BoxLayout(panelInputsParent, javax.swing.BoxLayout.Y_AXIS));
        panelInputsParent.add(nameDropdownRow1);
        panelInputsParent.add(nameDropdownRow2);
        panelInputsParent.add(nameDropdownRow3);
        panelInputsParent.add(nameDropdownRow4);

        jScrollPane1.setViewportView(panelInputsParent);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 158, Short.MAX_VALUE)
        );

        buttonApply.setText("OK");
        buttonApply.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonApplyActionPerformed(evt);
            }
        });

        buttonCancel.setText("Cancel");
        buttonCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonCancelActionPerformed(evt);
            }
        });

        jLabel5.setText("<html>Please specify how the columns in this ARFF file correspond to project inputs and outputs:</html>");

        comboOverwrite.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Add these examples to this project's examples", "Replace all project examples with these examples" }));
        comboOverwrite.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboOverwriteActionPerformed(evt);
            }
        });

        comboIgnore.setSelected(true);
        comboIgnore.setText("Ignore examples in file with no output values");
        comboIgnore.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboIgnoreActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(comboOverwrite, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(buttonCancel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(buttonApply))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(comboIgnore, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4)
                .addGap(2, 2, 2)
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(comboOverwrite, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(comboIgnore)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttonApply)
                    .addComponent(buttonCancel)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void buttonCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonCancelActionPerformed
        arffConfiguredReceiver.cancel();
        this.dispose();
    }//GEN-LAST:event_buttonCancelActionPerformed

    private void buttonApplyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonApplyActionPerformed
        int[] selectedIndices = new int[rows.size()];
        String[] selectedNames = new String[rows.size()];
        for (int i = 0; i < rows.size(); i++) {
            selectedIndices[i] = rows.get(i).getSelectedIndex();
            selectedNames[i] = rows.get(i).getSelectedItem();
        }

        for (int i = 0; i < rows.size(); i++) {
            int index1 = projectIndicesPerColumn.get(i).get(selectedIndices[i]);
            
            for (int j = i+1; j < rows.size(); j++) {
                int index2 = projectIndicesPerColumn.get(j).get(selectedIndices[j]);

                if (index1 != 0 && index1 == index2) {
                    String msg = "You have selected \'" + selectedNames[i]
                    + "\' more than once.";
                    Util.showPrettyErrorPane(this, msg);
                    return;
                }
            }
        }
        arffConfiguredReceiver.arffConfigured(selectedIndices, comboOverwrite.getSelectedIndex() == 1, comboIgnore.isSelected());
        this.dispose();
    }//GEN-LAST:event_buttonApplyActionPerformed

    private void comboOverwriteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboOverwriteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comboOverwriteActionPerformed

    private void comboIgnoreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboIgnoreActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comboIgnoreActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(WekiArffLoadFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(WekiArffLoadFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(WekiArffLoadFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(WekiArffLoadFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new WekiArffLoadFrame().setVisible(true);
            }
        });
    }
    
    public interface ArffConfiguredNotificationReceiver {
        public void arffConfigured(int[] selectedIndices, boolean overwrite, boolean ignoreExamplesWithoutOutputs);
        public void cancel();
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonApply;
    private javax.swing.JButton buttonCancel;
    private javax.swing.JCheckBox comboIgnore;
    private javax.swing.JComboBox comboOverwrite;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private wekimini.gui.NameDropdownRow nameDropdownRow1;
    private wekimini.gui.NameDropdownRow nameDropdownRow2;
    private wekimini.gui.NameDropdownRow nameDropdownRow3;
    private wekimini.gui.NameDropdownRow nameDropdownRow4;
    private javax.swing.JPanel panelInputsParent;
    // End of variables declaration//GEN-END:variables
}
